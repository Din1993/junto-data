
"""
Created: 9/23/2015

Gather twitter posts for multiple peopleand upload them to postgresql. 

@author: Danielle
"""
import tweepy
import csv
import os
import time

#authenticate with Twitter
consumer_key = "..."
consumer_secret = "..."
access_token = "..."
access_token_secret = "..."

auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)
api = tweepy.API(auth)

alltweets = []

users = ['User 1', 'User 2', etc.']
	
for person in users:
    print person    
    
    new_tweets = api.user_timeline(person,count=200)
    
    alltweets.extend(new_tweets)
    
    oldest = alltweets[-1].id - 1
   
    
    while len(new_tweets) > 0:
        
        print "getting tweets before %s" % (oldest)
		
        new_tweets = api.user_timeline(person,count=200,max_id=oldest)
		
        alltweets.extend(new_tweets)
		
        oldest = alltweets[-1].id - 1
		
        print "...%s tweets downloaded so far" % (len(alltweets))
	
    outtweets = [[tweet.user.screen_name,tweet.id,tweet.created_at,tweet.text.encode("utf-8"),tweet.retweet_count,tweet.favorite_count,tweet.entities.get('hashtags')] for tweet in alltweets]
    dir = r"C:\Users\path"
    if not os.path.exists(dir):
        os.mkdir(dir)

    with open(os.path.join(dir,'posts'+'.csv'), 'wb') as f:
        writer = csv.writer(f)
        writer.writerow(["screenname","id","created_at","text","retweets","favorites"])
        writer.writerows(outtweets)
        
    time.sleep(60)
    
    connect = psycopg2.connect("dbname=" " host=" " port=" " user=" " password=" " ")

    cursor = connect.cursor()
    
    #Make temp table to upload all new information.
    create_temp = "CREATE TEMPORARY TABLE tweet_temp (screenname text, created_at date, content_tweet text, retweets integer, favorites integer, hashtags text, tweet_id text PRIMARY KEY);"
    cursor.execute(create_temp)   
    
    #Upload all new information to the temp table.    
    for row in outtweets:
        insert_temp = "INSERT INTO tweet_temp (screenname, created_at, content_tweet, retweets, favorites, hashtags, tweet_id) VALUES ('{}', '{}', '{}', {}, {}, '{}', '{}');".format(str(row[0]), str(row[1]), str(row[2]), row[3], row[4], str(row[5]), str(row[6]))
        cursor.execute(insert_temp)
    
    #Update the current table in postgresql.    
    update = "UPDATE table SET (retweets, favorites) = (tweet_temp.retweets, tweet_temp.favorites) FROM tweet_temp WHERE table.tweet_id = tweet_temp.tweet_id;"        
    cursor.execute(update)
     
    #Add in all new data that is in the temp table, but not in the current table.    
    insert_new = "INSERT INTO table (SELECT * FROM tweet_temp WHERE tweet_id NOT IN(SELECT tweet_id FROM table));"
    cursor.execute(insert_new)  
    
    cursor.close()
    connect.commit()
    connect.close()
        
print 'Finished! <3'     
